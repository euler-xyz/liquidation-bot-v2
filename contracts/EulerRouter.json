{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_evc", "type": "address", "internalType": "address" },
        { "name": "_governor", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "EVC",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "fallbackOracle",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getConfiguredOracle",
      "inputs": [
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQuote",
      "inputs": [
        { "name": "inAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getQuotes",
      "inputs": [
        { "name": "inAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "govSetConfig",
      "inputs": [
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" },
        { "name": "oracle", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "govSetFallbackOracle",
      "inputs": [
        {
          "name": "_fallbackOracle",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "govSetResolvedVault",
      "inputs": [
        { "name": "vault", "type": "address", "internalType": "address" },
        { "name": "set", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "governor",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "resolveOracle",
      "inputs": [
        { "name": "inAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" },
        { "name": "", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "resolvedVaults",
      "inputs": [
        { "name": "vault", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "asset", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferGovernance",
      "inputs": [
        { "name": "newGovernor", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "ConfigSet",
      "inputs": [
        {
          "name": "asset0",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "asset1",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oracle",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FallbackOracleSet",
      "inputs": [
        {
          "name": "fallbackOracle",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GovernorSet",
      "inputs": [
        {
          "name": "oldGovernor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newGovernor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ResolvedVaultSet",
      "inputs": [
        {
          "name": "vault",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "asset",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "ControllerDisabled", "inputs": [] },
    { "type": "error", "name": "EVC_InvalidAddress", "inputs": [] },
    { "type": "error", "name": "Governance_CallerNotGovernor", "inputs": [] },
    { "type": "error", "name": "NotAuthorized", "inputs": [] },
    {
      "type": "error",
      "name": "PriceOracle_InvalidConfiguration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "PriceOracle_NotSupported",
      "inputs": [
        { "name": "base", "type": "address", "internalType": "address" },
        { "name": "quote", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801562000010575f80fd5b5060405162001bdd38038062001bdd83398101604081905262000033916200011c565b8181816001600160a01b0381166200005e57604051638133abd160e01b815260040160405180910390fd5b6001600160a01b03166080526200007581620000a7565b50506001600160a01b0381166200009f576040516301a4c16560e21b815260040160405180910390fd5b505062000152565b5f80546040516001600160a01b03808516939216917ff31bb200dbf42bb9cecaa49dceb87eae178b024ad3cf2930b4aaac5cb0f96ec091a35f80546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b038116811462000117575f80fd5b919050565b5f80604083850312156200012e575f80fd5b620001398362000100565b9150620001496020840162000100565b90509250929050565b608051611a10620001cd5f395f8181610266015281816103e9015281816104120152818161059a01528181610b2d01528181610b5601528181610cde01528181610e6501528181610e8e015281816110160152818161128c015281816112b50152818161143d01528181611628015261167c0152611a105ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c80638418e6f311610088578063ae68676c11610063578063ae68676c1461028a578063d38bfff4146102ab578063d6c02926146102be578063eab49501146102d1575f80fd5b80638418e6f3146102025780638aa7760814610251578063a70354a114610264575f80fd5b80630c340a24116100b85780630c340a24146101695780635ca40017146101ad578063629838e5146101e2575f80fd5b80630579e61f146100de57806306c570c11461010b57806306fdde0314610120575b5f80fd5b6100f16100ec3660046117f8565b6102e4565b604080519283526020830191909152015b60405180910390f35b61011e610119366004611837565b6103d2565b005b61015c6040518060400160405280600b81526020017f45756c6572526f7574657200000000000000000000000000000000000000000081525081565b6040516101029190611864565b5f546101889073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6101886101bb3660046118ce565b60026020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6001546101889073ffffffffffffffffffffffffffffffffffffffff1681565b6102156102103660046117f8565b610803565b6040805194855273ffffffffffffffffffffffffffffffffffffffff938416602086015291831691840191909152166060820152608001610102565b61018861025f3660046118e9565b6109e5565b7f0000000000000000000000000000000000000000000000000000000000000000610188565b61029d6102983660046117f8565b610a2e565b604051908152602001610102565b61011e6102b93660046118ce565b610b16565b61011e6102cc36600461192d565b610e4e565b61011e6102df3660046118ce565b611275565b5f805f6102f2868686610803565b9298509096509450905073ffffffffffffffffffffffffffffffffffffffff8085169086160361032857858692509250506103ca565b6040517f0579e61f0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301528581166044830152821690630579e61f906064016040805180830381865afa1580156103a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c49190611959565b92509250505b935093915050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610691575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610479573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049d919061197b565b905077ff000000000000000000000000000000000000000000000081161515806104df575076ff00000000000000000000000000000000000000000000811615155b80610501575075ff000000000000000000000000000000000000000000811615155b15610538576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa1580156105df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106039190611992565b905073ffffffffffffffffffffffffffffffffffffffff81161580159061065657508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561068d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff166106b161160f565b73ffffffffffffffffffffffffffffffffffffffff16146106fe576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610763576040517f0693059400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8061076f8585611702565b73ffffffffffffffffffffffffffffffffffffffff8281165f818152600360209081526040808320868616808552925280832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016958b16958617905551959750939550919390917f4ac83f39568b63f952374c82351889b07aff4f7e261232a20ba5a2a6d82b9ce091a45050505050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361084a57508592508491508390505f6109dc565b5f61085587876109e5565b905073ffffffffffffffffffffffffffffffffffffffff8116156108835787945086935085925090506109dc565b73ffffffffffffffffffffffffffffffffffffffff8088165f90815260026020526040902054168015610959576040517f07a2d13a000000000000000000000000000000000000000000000000000000008152600481018a905273ffffffffffffffffffffffffffffffffffffffff8916906307a2d13a90602401602060405180830381865afa158015610919573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093d919061197b565b985061094a898289610803565b955095509550955050506109dc565b60015473ffffffffffffffffffffffffffffffffffffffff169150816109cf576040517f4ca22af000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808a1660048301528816602482015260440160405180910390fd5b5087945086935085925090505b93509350935093565b5f805f6109f28585611702565b73ffffffffffffffffffffffffffffffffffffffff9182165f908152600360209081526040808320938516835292905220541695945050505050565b5f80610a3b858585610803565b9297509095509350905073ffffffffffffffffffffffffffffffffffffffff80841690851603610a6e5784915050610b0f565b6040517fae68676c0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff8581166024830152848116604483015282169063ae68676c90606401602060405180830381865afa158015610ae7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b0b919061197b565b9150505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610dd5575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be1919061197b565b905077ff00000000000000000000000000000000000000000000008116151580610c23575076ff00000000000000000000000000000000000000000000811615155b80610c45575075ff000000000000000000000000000000000000000000811615155b15610c7c576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa158015610d23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d479190611992565b905073ffffffffffffffffffffffffffffffffffffffff811615801590610d9a57508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15610dd1576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff16610df561160f565b73ffffffffffffffffffffffffffffffffffffffff1614610e42576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4b8161174c565b50565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361110d575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f19919061197b565b905077ff00000000000000000000000000000000000000000000008116151580610f5b575076ff00000000000000000000000000000000000000000000811615155b80610f7d575075ff000000000000000000000000000000000000000000811615155b15610fb4576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa15801561105b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107f9190611992565b905073ffffffffffffffffffffffffffffffffffffffff8116158015906110d257508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611109576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff1661112d61160f565b73ffffffffffffffffffffffffffffffffffffffff161461117a576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81611186575f6111f3565b8273ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f39190611992565b73ffffffffffffffffffffffffffffffffffffffff8481165f8181526002602052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948616948517905551939450919290917f15beaec71c94ee69b5a824e905ca6d1260da10196b715c38b565b80180f630ce91a3505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303611534575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611340919061197b565b905077ff00000000000000000000000000000000000000000000008116151580611382575076ff00000000000000000000000000000000000000000000811615155b806113a4575075ff000000000000000000000000000000000000000000811615155b156113db576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa158015611482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a69190611992565b905073ffffffffffffffffffffffffffffffffffffffff8116158015906114f957508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611530576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff1661155461160f565b73ffffffffffffffffffffffffffffffffffffffff16146115a1576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fef21cd88756d665855f56a2652b7eda229d6f3102988a95975e46964d24d478a905f90a250565b5f3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681036116fd576040517f18503a1e0000000000000000000000000000000000000000000000000000000081525f60048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906318503a1e906024016040805180830381865afa1580156116d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116f991906119ad565b5090505b919050565b5f808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161061173e578284611741565b83835b915091509250929050565b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917ff31bb200dbf42bb9cecaa49dceb87eae178b024ad3cf2930b4aaac5cb0f96ec091a35f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff81168114610e4b575f80fd5b5f805f6060848603121561180a575f80fd5b83359250602084013561181c816117d7565b9150604084013561182c816117d7565b809150509250925092565b5f805f60608486031215611849575f80fd5b8335611854816117d7565b9250602084013561181c816117d7565b5f602080835283518060208501525f5b8181101561189057858101830151858201604001528201611874565b505f6040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b5f602082840312156118de575f80fd5b8135610b0f816117d7565b5f80604083850312156118fa575f80fd5b8235611905816117d7565b91506020830135611915816117d7565b809150509250929050565b8015158114610e4b575f80fd5b5f806040838503121561193e575f80fd5b8235611949816117d7565b9150602083013561191581611920565b5f806040838503121561196a575f80fd5b505080516020909101519092909150565b5f6020828403121561198b575f80fd5b5051919050565b5f602082840312156119a2575f80fd5b8151610b0f816117d7565b5f80604083850312156119be575f80fd5b82516119c9816117d7565b60208401519092506119158161192056fea2646970667358221220d71b678db67805238737a693bdeb1d631c306ac5cfc0a7e825ebbdb41998540a64736f6c63430008180033",
    "sourceMap": "773:7648:37:-:0;;;2727:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2783:4;2789:9;2783:4;-1:-1:-1;;;;;867:18:9;;863:51;;894:20;;-1:-1:-1;;;894:20:9;;;;;;;;;;;863:51;-1:-1:-1;;;;;925:16:9;;;871:23:240::1;884:9:::0;871:12:::1;:23::i;:::-;-1:-1:-1::0;;;;;;;2814:23:37;::::1;2810:77;;2846:41;;-1:-1:-1::0;;;2846:41:37::1;;;;;;;;;;;2810:77;2727:167:::0;;773:7648;;1618:140:240;1697:8;;;1685:34;;-1:-1:-1;;;;;1685:34:240;;;;1697:8;;;1685:34;;;1729:8;:22;;-1:-1:-1;;;;;;1729:22:240;-1:-1:-1;;;;;1729:22:240;;;;;;;;;;1618:140::o;14:177:270:-;93:13;;-1:-1:-1;;;;;135:31:270;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;773:7648:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b50600436106100da575f3560e01c80638418e6f311610088578063ae68676c11610063578063ae68676c1461028a578063d38bfff4146102ab578063d6c02926146102be578063eab49501146102d1575f80fd5b80638418e6f3146102025780638aa7760814610251578063a70354a114610264575f80fd5b80630c340a24116100b85780630c340a24146101695780635ca40017146101ad578063629838e5146101e2575f80fd5b80630579e61f146100de57806306c570c11461010b57806306fdde0314610120575b5f80fd5b6100f16100ec3660046117f8565b6102e4565b604080519283526020830191909152015b60405180910390f35b61011e610119366004611837565b6103d2565b005b61015c6040518060400160405280600b81526020017f45756c6572526f7574657200000000000000000000000000000000000000000081525081565b6040516101029190611864565b5f546101889073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610102565b6101886101bb3660046118ce565b60026020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6001546101889073ffffffffffffffffffffffffffffffffffffffff1681565b6102156102103660046117f8565b610803565b6040805194855273ffffffffffffffffffffffffffffffffffffffff938416602086015291831691840191909152166060820152608001610102565b61018861025f3660046118e9565b6109e5565b7f0000000000000000000000000000000000000000000000000000000000000000610188565b61029d6102983660046117f8565b610a2e565b604051908152602001610102565b61011e6102b93660046118ce565b610b16565b61011e6102cc36600461192d565b610e4e565b61011e6102df3660046118ce565b611275565b5f805f6102f2868686610803565b9298509096509450905073ffffffffffffffffffffffffffffffffffffffff8085169086160361032857858692509250506103ca565b6040517f0579e61f0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301528581166044830152821690630579e61f906064016040805180830381865afa1580156103a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c49190611959565b92509250505b935093915050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610691575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610479573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049d919061197b565b905077ff000000000000000000000000000000000000000000000081161515806104df575076ff00000000000000000000000000000000000000000000811615155b80610501575075ff000000000000000000000000000000000000000000811615155b15610538576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa1580156105df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106039190611992565b905073ffffffffffffffffffffffffffffffffffffffff81161580159061065657508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561068d576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff166106b161160f565b73ffffffffffffffffffffffffffffffffffffffff16146106fe576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610763576040517f0693059400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8061076f8585611702565b73ffffffffffffffffffffffffffffffffffffffff8281165f818152600360209081526040808320868616808552925280832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016958b16958617905551959750939550919390917f4ac83f39568b63f952374c82351889b07aff4f7e261232a20ba5a2a6d82b9ce091a45050505050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361084a57508592508491508390505f6109dc565b5f61085587876109e5565b905073ffffffffffffffffffffffffffffffffffffffff8116156108835787945086935085925090506109dc565b73ffffffffffffffffffffffffffffffffffffffff8088165f90815260026020526040902054168015610959576040517f07a2d13a000000000000000000000000000000000000000000000000000000008152600481018a905273ffffffffffffffffffffffffffffffffffffffff8916906307a2d13a90602401602060405180830381865afa158015610919573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093d919061197b565b985061094a898289610803565b955095509550955050506109dc565b60015473ffffffffffffffffffffffffffffffffffffffff169150816109cf576040517f4ca22af000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808a1660048301528816602482015260440160405180910390fd5b5087945086935085925090505b93509350935093565b5f805f6109f28585611702565b73ffffffffffffffffffffffffffffffffffffffff9182165f908152600360209081526040808320938516835292905220541695945050505050565b5f80610a3b858585610803565b9297509095509350905073ffffffffffffffffffffffffffffffffffffffff80841690851603610a6e5784915050610b0f565b6040517fae68676c0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff8581166024830152848116604483015282169063ae68676c90606401602060405180830381865afa158015610ae7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b0b919061197b565b9150505b9392505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610dd5575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be1919061197b565b905077ff00000000000000000000000000000000000000000000008116151580610c23575076ff00000000000000000000000000000000000000000000811615155b80610c45575075ff000000000000000000000000000000000000000000811615155b15610c7c576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa158015610d23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d479190611992565b905073ffffffffffffffffffffffffffffffffffffffff811615801590610d9a57508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15610dd1576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff16610df561160f565b73ffffffffffffffffffffffffffffffffffffffff1614610e42576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e4b8161174c565b50565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361110d575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f19919061197b565b905077ff00000000000000000000000000000000000000000000008116151580610f5b575076ff00000000000000000000000000000000000000000000811615155b80610f7d575075ff000000000000000000000000000000000000000000811615155b15610fb4576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa15801561105b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107f9190611992565b905073ffffffffffffffffffffffffffffffffffffffff8116158015906110d257508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611109576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff1661112d61160f565b73ffffffffffffffffffffffffffffffffffffffff161461117a576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81611186575f6111f3565b8273ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f39190611992565b73ffffffffffffffffffffffffffffffffffffffff8481165f8181526002602052604080822080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948616948517905551939450919290917f15beaec71c94ee69b5a824e905ca6d1260da10196b715c38b565b80180f630ce91a3505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303611534575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a1a3a1d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611340919061197b565b905077ff00000000000000000000000000000000000000000000008116151580611382575076ff00000000000000000000000000000000000000000000811615155b806113a4575075ff000000000000000000000000000000000000000000811615155b156113db576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff82166040517f442b172c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192505f917f0000000000000000000000000000000000000000000000000000000000000000169063442b172c90602401602060405180830381865afa158015611482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a69190611992565b905073ffffffffffffffffffffffffffffffffffffffff8116158015906114f957508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611530576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b5f5473ffffffffffffffffffffffffffffffffffffffff1661155461160f565b73ffffffffffffffffffffffffffffffffffffffff16146115a1576040517ff9e36c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fef21cd88756d665855f56a2652b7eda229d6f3102988a95975e46964d24d478a905f90a250565b5f3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681036116fd576040517f18503a1e0000000000000000000000000000000000000000000000000000000081525f60048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906318503a1e906024016040805180830381865afa1580156116d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116f991906119ad565b5090505b919050565b5f808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161061173e578284611741565b83835b915091509250929050565b5f805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917ff31bb200dbf42bb9cecaa49dceb87eae178b024ad3cf2930b4aaac5cb0f96ec091a35f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff81168114610e4b575f80fd5b5f805f6060848603121561180a575f80fd5b83359250602084013561181c816117d7565b9150604084013561182c816117d7565b809150509250925092565b5f805f60608486031215611849575f80fd5b8335611854816117d7565b9250602084013561181c816117d7565b5f602080835283518060208501525f5b8181101561189057858101830151858201604001528201611874565b505f6040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b5f602082840312156118de575f80fd5b8135610b0f816117d7565b5f80604083850312156118fa575f80fd5b8235611905816117d7565b91506020830135611915816117d7565b809150509250929050565b8015158114610e4b575f80fd5b5f806040838503121561193e575f80fd5b8235611949816117d7565b9150602083013561191581611920565b5f806040838503121561196a575f80fd5b505080516020909101519092909150565b5f6020828403121561198b575f80fd5b5051919050565b5f602082840312156119a2575f80fd5b8151610b0f816117d7565b5f80604083850312156119be575f80fd5b82516119c9816117d7565b60208401519092506119158161192056fea2646970667358221220d71b678db67805238737a693bdeb1d631c306ac5cfc0a7e825ebbdb41998540a64736f6c63430008180033",
    "sourceMap": "773:7648:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5089:344;;;;;;:::i;:::-;;:::i;:::-;;;;808:25:270;;;864:2;849:18;;842:34;;;;781:18;5089:344:37;;;;;;;;3200:398;;;;;;:::i;:::-;;:::i;:::-;;861:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;503:23:240:-;;;;;;;;;;;;2209:42:270;2197:55;;;2179:74;;2167:2;2152:18;503:23:240;2033:226:270;1174:61:37;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1055:29;;;;;;;;;6942:1031;;;;;;:::i;:::-;;:::i;:::-;;;;2747:25:270;;;2791:42;2869:15;;;2864:2;2849:18;;2842:43;2921:15;;;2901:18;;;2894:43;;;;2973:15;2968:2;2953:18;;2946:43;2734:3;2719:19;6942:1031:37;2516:479:270;5708:198:37;;;;;;:::i;:::-;;:::i;1100:83:9:-;1172:3;1100:83;;4729:321:37;;;;;;:::i;:::-;;:::i;:::-;;;3539:25:270;;;3527:2;3512:18;4729:321:37;3393:177:270;1088:133:240;;;;;;:::i;:::-;;:::i;3985:255:37:-;;;;;;:::i;:::-;;:::i;4495:195::-;;;;;;:::i;:::-;;:::i;5089:344::-;5178:7;5187;5206:14;5264:36;5278:8;5288:4;5294:5;5264:13;:36::i;:::-;5230:70;;-1:-1:-1;5230:70:37;;-1:-1:-1;5230:70:37;-1:-1:-1;5230:70:37;-1:-1:-1;5314:13:37;;;;;;;;5310:46;;5337:8;5347;5329:27;;;;;;;5310:46;5373:53;;;;;;;;4287:25:270;;;5373:30:37;4409:15:270;;;4389:18;;;4382:43;4461:15;;;4441:18;;;4434:43;5373:30:37;;;;;4260:18:270;;5373:53:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5366:60;;;;;5089:344;;;;;;;:::o;3200:398::-;4222:26:9;4244:3;4222:26;:10;:26;4218:531;;4264:5;4280:3;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4264:45;-1:-1:-1;1854:66:3;3796:45;;:50;;4328:66:9;;;-1:-1:-1;1718:66:3;3441:58;;:63;;4360:34:9;4328:94;;;-1:-1:-1;1569:66:3;3125:41;;:46;;4398:24:9;4324:155;;;4449:15;;;;;;;;;;;;;;4324:155;4493:25;1316:66:3;2482:43;;4576:38:9;;;;;:19;2197:55:270;;;4576:38:9;;;2179:74:270;4493:53:9;;-1:-1:-1;4560:13:9;;4576:3;:19;;;;2152:18:270;;4576:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4560:54;-1:-1:-1;4633:19:9;;;;;;;:49;;;4665:17;4656:26;;:5;:26;;;;4633:49;4629:110;;;4709:15;;;;;;;;;;;;;;4629:110;4250:499;;;4218:531;1414:8:240::1;::::0;::::1;;1398:12;:10;:12::i;:::-;:24;;;1394:99;;1445:37;;;;;;;;;;;;;;1394:99;3383:5:37::2;3375:13;;:4;:13;;::::0;3371:67:::2;;3397:41;;;;;;;;;;;;;;3371:67;3449:14;3465::::0;3483:18:::2;3489:4;3495:5;3483;:18::i;:::-;3511:15;::::0;;::::2;;::::0;;;:7:::2;:15;::::0;;;;;;;:23;;::::2;::::0;;;;;;;;:32;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;3558:33;3511:15;;-1:-1:-1;3511:23:37;;-1:-1:-1;3511:32:37;;:15;;3558:33:::2;::::0;::::2;3309:289;;3200:398:::0;;;:::o;6942:1031::-;7057:7;7087;7107;7128;7212:5;7204:13;;:4;:13;;;7200:61;;-1:-1:-1;7227:8:37;;-1:-1:-1;7237:4:37;;-1:-1:-1;7243:5:37;;-1:-1:-1;7258:1:37;7219:42;;7200:61;7344:14;7361:32;7381:4;7387:5;7361:19;:32::i;:::-;7344:49;-1:-1:-1;7407:20:37;;;;7403:64;;7437:8;;-1:-1:-1;7447:4:37;;-1:-1:-1;7453:5:37;;-1:-1:-1;7460:6:37;-1:-1:-1;7429:38:37;;7403:64;7539:20;;;;7519:17;7539:20;;;:14;:20;;;;;;;7573:23;;7569:167;;7623:40;;;;;;;;3539:25:270;;;7623:30:37;;;;;;3512:18:270;;7623:40:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7612:51;;7684:41;7698:8;7708:9;7719:5;7684:13;:41::i;:::-;7677:48;;;;;;;;;;;;7569:167;7817:14;;;;;-1:-1:-1;7817:14:37;7841:77;;7874:44;;;;;5367:42:270;5436:15;;;7874:44:37;;;5418:34:270;5488:15;;5468:18;;;5461:43;5330:18;;7874:44:37;;;;;;;7841:77;-1:-1:-1;7936:8:37;;-1:-1:-1;7946:4:37;;-1:-1:-1;7952:5:37;;-1:-1:-1;7959:6:37;-1:-1:-1;6942:1031:37;;;;;;;;:::o;5708:198::-;5787:7;5807:14;5823;5841:18;5847:4;5853:5;5841;:18::i;:::-;5876:15;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;5708:198;-1:-1:-1;;;;;5708:198:37:o;4729:321::-;4817:7;4836:14;4894:36;4908:8;4918:4;4924:5;4894:13;:36::i;:::-;4860:70;;-1:-1:-1;4860:70:37;;-1:-1:-1;4860:70:37;-1:-1:-1;4860:70:37;-1:-1:-1;4944:13:37;;;;;;;;4940:34;;4966:8;4959:15;;;;;4940:34;4991:52;;;;;;;;4287:25:270;;;4991:29:37;4409:15:270;;;4389:18;;;4382:43;4461:15;;;4441:18;;;4434:43;4991:29:37;;;;;4260:18:270;;4991:52:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4984:59;;;4729:321;;;;;;:::o;1088:133:240:-;4222:26:9;4244:3;4222:26;:10;:26;4218:531;;4264:5;4280:3;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4264:45;-1:-1:-1;1854:66:3;3796:45;;:50;;4328:66:9;;;-1:-1:-1;1718:66:3;3441:58;;:63;;4360:34:9;4328:94;;;-1:-1:-1;1569:66:3;3125:41;;:46;;4398:24:9;4324:155;;;4449:15;;;;;;;;;;;;;;4324:155;4493:25;1316:66:3;2482:43;;4576:38:9;;;;;:19;2197:55:270;;;4576:38:9;;;2179:74:270;4493:53:9;;-1:-1:-1;4560:13:9;;4576:3;:19;;;;2152:18:270;;4576:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4560:54;-1:-1:-1;4633:19:9;;;;;;;:49;;;4665:17;4656:26;;:5;:26;;;;4633:49;4629:110;;;4709:15;;;;;;;;;;;;;;4629:110;4250:499;;;4218:531;1414:8:240::1;::::0;::::1;;1398:12;:10;:12::i;:::-;:24;;;1394:99;;1445:37;;;;;;;;;;;;;;1394:99;1189:25:::2;1202:11;1189:12;:25::i;:::-;1088:133:::0;:::o;3985:255:37:-;4222:26:9;4244:3;4222:26;:10;:26;4218:531;;4264:5;4280:3;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4264:45;-1:-1:-1;1854:66:3;3796:45;;:50;;4328:66:9;;;-1:-1:-1;1718:66:3;3441:58;;:63;;4360:34:9;4328:94;;;-1:-1:-1;1569:66:3;3125:41;;:46;;4398:24:9;4324:155;;;4449:15;;;;;;;;;;;;;;4324:155;4493:25;1316:66:3;2482:43;;4576:38:9;;;;;:19;2197:55:270;;;4576:38:9;;;2179:74:270;4493:53:9;;-1:-1:-1;4560:13:9;;4576:3;:19;;;;2152:18:270;;4576:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4560:54;-1:-1:-1;4633:19:9;;;;;;;:49;;;4665:17;4656:26;;:5;:26;;;;4633:49;4629:110;;;4709:15;;;;;;;;;;;;;;4629:110;4250:499;;;4218:531;1414:8:240::1;::::0;::::1;;1398:12;:10;:12::i;:::-;:24;;;1394:99;;1445:37;;;;;;;;;;;;;;1394:99;4091:13:37::2;4107:3;:42;;4147:1;4107:42;;;4122:5;4113:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4159:21;::::0;;::::2;;::::0;;;:14:::2;:21;::::0;;;;;:29;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;4203:30;4159:29;;-1:-1:-1;4159:29:37;;:21;;4203:30:::2;::::0;::::2;4081:159;3985:255:::0;;:::o;4495:195::-;4222:26:9;4244:3;4222:26;:10;:26;4218:531;;4264:5;4280:3;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4264:45;-1:-1:-1;1854:66:3;3796:45;;:50;;4328:66:9;;;-1:-1:-1;1718:66:3;3441:58;;:63;;4360:34:9;4328:94;;;-1:-1:-1;1569:66:3;3125:41;;:46;;4398:24:9;4324:155;;;4449:15;;;;;;;;;;;;;;4324:155;4493:25;1316:66:3;2482:43;;4576:38:9;;;;;:19;2197:55:270;;;4576:38:9;;;2179:74:270;4493:53:9;;-1:-1:-1;4560:13:9;;4576:3;:19;;;;2152:18:270;;4576:38:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4560:54;-1:-1:-1;4633:19:9;;;;;;;:49;;;4665:17;4656:26;;:5;:26;;;;4633:49;4629:110;;;4709:15;;;;;;;;;;;;;;4629:110;4250:499;;;4218:531;1414:8:240::1;::::0;::::1;;1398:12;:10;:12::i;:::-;:24;;;1394:99;;1445:37;;;;;;;;;;;;;;1394:99;4602:14:37::2;:32:::0;;;::::2;;::::0;::::2;::::0;;::::2;::::0;;;4649:34:::2;::::0;::::2;::::0;-1:-1:-1;;4649:34:37::2;4495:195:::0;:::o;6371:248:9:-;6424:7;6460:10;6485:22;6503:3;6485:22;;;6481:108;;6535:43;;;;;6575:1;6535:43;;;2179:74:270;6535:3:9;:31;;;;;2152:18:270;;6535:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6523:55:9;-1:-1:-1;6481:108:9;6606:6;6371:248;-1:-1:-1;6371:248:9:o;8254:165:37:-;8324:7;8333;8368:6;8359:15;;:6;:15;;;:53;;8397:6;8405;8359:53;;;8378:6;8386;8359:53;8352:60;;;;8254:165;;;;;:::o;1618:140:240:-;1697:8;;;1685:34;;;;;;;1697:8;;;1685:34;;;1729:8;:22;;;;;;;;;;;;;;;1618:140::o;14:154:270:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:456;250:6;258;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;371:9;358:23;348:33;;431:2;420:9;416:18;403:32;444:31;469:5;444:31;:::i;:::-;494:5;-1:-1:-1;551:2:270;536:18;;523:32;564:33;523:32;564:33;:::i;:::-;616:7;606:17;;;173:456;;;;;:::o;887:529::-;964:6;972;980;1033:2;1021:9;1012:7;1008:23;1004:32;1001:52;;;1049:1;1046;1039:12;1001:52;1088:9;1075:23;1107:31;1132:5;1107:31;:::i;:::-;1157:5;-1:-1:-1;1214:2:270;1199:18;;1186:32;1227:33;1186:32;1227:33;:::i;1421:607::-;1533:4;1562:2;1591;1580:9;1573:21;1623:6;1617:13;1666:6;1661:2;1650:9;1646:18;1639:34;1691:1;1701:140;1715:6;1712:1;1709:13;1701:140;;;1810:14;;;1806:23;;1800:30;1776:17;;;1795:2;1772:26;1765:66;1730:10;;1701:140;;;1705:3;1890:1;1885:2;1876:6;1865:9;1861:22;1857:31;1850:42;2019:2;1949:66;1944:2;1936:6;1932:15;1928:88;1917:9;1913:104;1909:113;1901:121;;;;1421:607;;;;:::o;2264:247::-;2323:6;2376:2;2364:9;2355:7;2351:23;2347:32;2344:52;;;2392:1;2389;2382:12;2344:52;2431:9;2418:23;2450:31;2475:5;2450:31;:::i;3000:388::-;3068:6;3076;3129:2;3117:9;3108:7;3104:23;3100:32;3097:52;;;3145:1;3142;3135:12;3097:52;3184:9;3171:23;3203:31;3228:5;3203:31;:::i;:::-;3253:5;-1:-1:-1;3310:2:270;3295:18;;3282:32;3323:33;3282:32;3323:33;:::i;:::-;3375:7;3365:17;;;3000:388;;;;;:::o;3575:118::-;3661:5;3654:13;3647:21;3640:5;3637:32;3627:60;;3683:1;3680;3673:12;3698:382;3763:6;3771;3824:2;3812:9;3803:7;3799:23;3795:32;3792:52;;;3840:1;3837;3830:12;3792:52;3879:9;3866:23;3898:31;3923:5;3898:31;:::i;:::-;3948:5;-1:-1:-1;4005:2:270;3990:18;;3977:32;4018:30;3977:32;4018:30;:::i;4488:245::-;4567:6;4575;4628:2;4616:9;4607:7;4603:23;4599:32;4596:52;;;4644:1;4641;4634:12;4596:52;-1:-1:-1;;4667:16:270;;4723:2;4708:18;;;4702:25;4667:16;;4702:25;;-1:-1:-1;4488:245:270:o;4738:184::-;4808:6;4861:2;4849:9;4840:7;4836:23;4832:32;4829:52;;;4877:1;4874;4867:12;4829:52;-1:-1:-1;4900:16:270;;4738:184;-1:-1:-1;4738:184:270:o;4927:251::-;4997:6;5050:2;5038:9;5029:7;5025:23;5021:32;5018:52;;;5066:1;5063;5056:12;5018:52;5098:9;5092:16;5117:31;5142:5;5117:31;:::i;5515:379::-;5591:6;5599;5652:2;5640:9;5631:7;5627:23;5623:32;5620:52;;;5668:1;5665;5658:12;5620:52;5700:9;5694:16;5719:31;5744:5;5719:31;:::i;:::-;5819:2;5804:18;;5798:25;5769:5;;-1:-1:-1;5832:30:270;5798:25;5832:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "4898": [
        { "start": 614, "length": 32 },
        { "start": 1001, "length": 32 },
        { "start": 1042, "length": 32 },
        { "start": 1434, "length": 32 },
        { "start": 2861, "length": 32 },
        { "start": 2902, "length": 32 },
        { "start": 3294, "length": 32 },
        { "start": 3685, "length": 32 },
        { "start": 3726, "length": 32 },
        { "start": 4118, "length": 32 },
        { "start": 4748, "length": 32 },
        { "start": 4789, "length": 32 },
        { "start": 5181, "length": 32 },
        { "start": 5672, "length": 32 },
        { "start": 5756, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "EVC()": "a70354a1",
    "fallbackOracle()": "629838e5",
    "getConfiguredOracle(address,address)": "8aa77608",
    "getQuote(uint256,address,address)": "ae68676c",
    "getQuotes(uint256,address,address)": "0579e61f",
    "govSetConfig(address,address,address)": "06c570c1",
    "govSetFallbackOracle(address)": "eab49501",
    "govSetResolvedVault(address,bool)": "d6c02926",
    "governor()": "0c340a24",
    "name()": "06fdde03",
    "resolveOracle(uint256,address,address)": "8418e6f3",
    "resolvedVaults(address)": "5ca40017",
    "transferGovernance(address)": "d38bfff4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_evc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ControllerDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EVC_InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Governance_CallerNotGovernor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceOracle_InvalidConfiguration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"PriceOracle_NotSupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"ResolvedVaultSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EVC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getConfiguredOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"getQuotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"govSetConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fallbackOracle\",\"type\":\"address\"}],\"name\":\"govSetFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"set\",\"type\":\"bool\"}],\"name\":\"govSetResolvedVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"}],\"name\":\"resolveOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"resolvedVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Euler Labs (https://www.eulerlabs.com/)\",\"custom:security-contact\":\"security@euler.xyz\",\"details\":\"Integration Note: The router supports pricing via `convertToAssets` for trusted `resolvedVaults`. By ERC4626 spec `convert*` ignores liquidity restrictions, fees, slippage and per-user restrictions. Therefore the reported price may not be realizable through `redeem` or `withdraw`.\",\"errors\":{\"PriceOracle_NotSupported(address,address)\":[{\"params\":{\"base\":\"The address of the base asset.\",\"quote\":\"The address of the quote asset.\"}}]},\"events\":{\"ConfigSet(address,address,address)\":{\"details\":\"If `oracle` is `address(0)` then the configuration was removed. The keys are lexicographically sorted (asset0 < asset1).\",\"params\":{\"asset0\":\"The address first in lexicographic order.\",\"asset1\":\"The address second in lexicographic order.\",\"oracle\":\"The address of the PriceOracle that resolves the pair.\"}},\"FallbackOracleSet(address)\":{\"details\":\"If `fallbackOracle` is `address(0)` then there is no fallback resolver.\",\"params\":{\"fallbackOracle\":\"The address of the PriceOracle that is called when base/quote is not configured.\"}},\"GovernorSet(address,address)\":{\"params\":{\"newGovernor\":\"The address of the newly appointed governor.\",\"oldGovernor\":\"The address of the previous governor.\"}},\"ResolvedVaultSet(address,address)\":{\"details\":\"If `asset` is `address(0)` then the configuration was removed.\",\"params\":{\"asset\":\"The address of the vault's asset.\",\"vault\":\"The address of the ERC4626 vault.\"}}},\"kind\":\"dev\",\"methods\":{\"EVC()\":{\"returns\":{\"_0\":\"The address of the EVC contract.\"}},\"constructor\":{\"params\":{\"_governor\":\"The address of the governor.\"}},\"getConfiguredOracle(address,address)\":{\"params\":{\"base\":\"The address of the base token.\",\"quote\":\"The address of the quote token.\"},\"returns\":{\"_0\":\"The configured `PriceOracle` for the pair or `address(0)` if no oracle is configured.\"}},\"getQuote(uint256,address,address)\":{\"params\":{\"base\":\"The token that is being priced.\",\"inAmount\":\"The amount of `base` to convert.\",\"quote\":\"The token that is the unit of account.\"},\"returns\":{\"_0\":\"The amount of `quote` that is equivalent to `inAmount` of `base`.\"}},\"getQuotes(uint256,address,address)\":{\"params\":{\"base\":\"The token that is being priced.\",\"inAmount\":\"The amount of `base` to convert.\",\"quote\":\"The token that is the unit of account.\"},\"returns\":{\"_0\":\"The amount of `quote` you would get for selling `inAmount` of `base`.\",\"_1\":\"The amount of `quote` you would spend for buying `inAmount` of `base`.\"}},\"govSetConfig(address,address,address)\":{\"details\":\"Callable only by the governor.\",\"params\":{\"base\":\"The address of the base token.\",\"oracle\":\"The address of the PriceOracle to resolve the pair.\",\"quote\":\"The address of the quote token.\"}},\"govSetFallbackOracle(address)\":{\"details\":\"Callable only by the governor. `address(0)` removes the fallback.\",\"params\":{\"_fallbackOracle\":\"The address of the PriceOracle that is called when base/quote is not configured.\"}},\"govSetResolvedVault(address,bool)\":{\"details\":\"Callable only by the governor. Vault must implement ERC4626. Note: Before configuring a vault verify that its `convertToAssets` is secure.\",\"params\":{\"set\":\"True to configure the vault, false to clear the record.\",\"vault\":\"The address of the ERC4626 vault.\"}},\"resolveOracle(uint256,address,address)\":{\"details\":\"Implements the following resolution logic: 1. Check the base case: `base == quote` and terminate if true. 2. If a PriceOracle is configured for base/quote in the `oracles` mapping, return it. 3. If `base` is configured as a resolved ERC4626 vault, call `convertToAssets(inAmount)` and continue the recursion, substituting the ERC4626 `asset` for `base`. 4. As a last resort, return the fallback oracle or revert if it is not set.\",\"params\":{\"base\":\"The token that is being priced.\",\"inAmount\":\"The amount of `base` to convert.\",\"quote\":\"The token that is the unit of account.\"},\"returns\":{\"_0\":\"The resolved amount. This value may be different from the original `inAmount` if the resolution path included an ERC4626 vault present in `resolvedVaults`.\",\"_1\":\"The resolved base.\",\"_2\":\"The resolved quote.\",\"_3\":\"The resolved PriceOracle to call.\"}},\"transferGovernance(address)\":{\"details\":\"Can only be called by the current governor.\",\"params\":{\"newGovernor\":\"The address of the next governor.\"}}},\"stateVariables\":{\"fallbackOracle\":{\"details\":\"If `address(0)` then there is no fallback.\"},\"name\":{\"return\":\"The name of the oracle.\",\"returns\":{\"_0\":\"The name of the oracle.\"}},\"oracles\":{\"details\":\"The keys are lexicographically sorted (asset0 < asset1).\"}},\"title\":\"EulerRouter\",\"version\":1},\"userdoc\":{\"errors\":{\"Governance_CallerNotGovernor()\":[{\"notice\":\"The method can only be called by the governor.\"}],\"PriceOracle_InvalidConfiguration()\":[{\"notice\":\"The configuration parameters for the PriceOracle are invalid.\"}],\"PriceOracle_NotSupported(address,address)\":[{\"notice\":\"The base/quote path is not supported.\"}]},\"events\":{\"ConfigSet(address,address,address)\":{\"notice\":\"Configure a PriceOracle to resolve an asset pair.\"},\"FallbackOracleSet(address)\":{\"notice\":\"Set a PriceOracle as a fallback resolver.\"},\"GovernorSet(address,address)\":{\"notice\":\"Set the governor of the contract.\"},\"ResolvedVaultSet(address,address)\":{\"notice\":\"Mark an ERC4626 vault to be resolved to its `asset` via its `convert*` methods.\"}},\"kind\":\"user\",\"methods\":{\"EVC()\":{\"notice\":\"Returns the address of the Ethereum Vault Connector (EVC) used by this contract.\"},\"constructor\":{\"notice\":\"Deploy EulerRouter.\"},\"fallbackOracle()\":{\"notice\":\"The PriceOracle to call if this router is not configured for base/quote.\"},\"getConfiguredOracle(address,address)\":{\"notice\":\"Get the PriceOracle configured for base/quote.\"},\"getQuote(uint256,address,address)\":{\"notice\":\"One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread.\"},\"getQuotes(uint256,address,address)\":{\"notice\":\"Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token.\"},\"govSetConfig(address,address,address)\":{\"notice\":\"Configure a PriceOracle to resolve base/quote and quote/base.\"},\"govSetFallbackOracle(address)\":{\"notice\":\"Set a PriceOracle as a fallback resolver.\"},\"govSetResolvedVault(address,bool)\":{\"notice\":\"Configure an ERC4626 vault to use internal pricing via `convert*` methods.\"},\"governor()\":{\"notice\":\"The active governor address. If `address(0)` then the role is renounced.\"},\"name()\":{\"notice\":\"Get the name of the oracle.\"},\"resolveOracle(uint256,address,address)\":{\"notice\":\"Resolve the PriceOracle to call for a given base/quote pair.\"},\"resolvedVaults(address)\":{\"notice\":\"ERC4626 vaults resolved using internal pricing (`convertToAssets`).\"},\"transferGovernance(address)\":{\"notice\":\"Transfer the governor role to another address.\"}},\"notice\":\"Default Oracle resolver for Euler lending products.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/euler-price-oracle/src/EulerRouter.sol\":\"EulerRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@axiom-crypto/axiom-std/=lib/euler-price-oracle/lib/axiom-std/sr/\",\":@axiom-crypto/v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/\",\":@openzeppelin/contracts/utils/math/=lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/utils/math/\",\":@pyth/=lib/euler-price-oracle/lib/pyth-sdk-solidity/\",\":@redstone/evm-connector/=lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/\",\":@solady/=lib/euler-price-oracle/lib/solady/src/\",\":@uniswap/v3-core/=lib/euler-price-oracle/lib/v3-core/\",\":@uniswap/v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/\",\":axiom-std/=lib/euler-price-oracle/lib/axiom-std/src/\",\":axiom-v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/\",\":ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":ethereum-vault-connector/=lib/ethereum-vault-connector/src/\",\":euler-price-oracle-test/=lib/euler-price-oracle/test/\",\":euler-price-oracle/=lib/euler-price-oracle/src/\",\":euler-vault-kit/=lib/euler-vault-kit/src/\",\":evc/=lib/ethereum-vault-connector/src/\",\":evk-test/=lib/euler-vault-kit/test/\",\":evk/=lib/euler-vault-kit/src/\",\":fee-flow/=lib/fee-flow/src/\",\":forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/euler-vault-kit/lib/permit2/\",\":pyth-sdk-solidity/=lib/euler-price-oracle/lib/pyth-sdk-solidity/\",\":redstone-oracles-monorepo/=lib/euler-price-oracle/lib/\",\":reward-streams/=lib/reward-streams/src/\",\":solady/=lib/euler-price-oracle/lib/solady/src/\",\":solmate/=lib/fee-flow/lib/solmate/src/\",\":v3-core/=lib/euler-price-oracle/lib/v3-core/contracts/\",\":v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/ethereum-vault-connector/src/ExecutionContext.sol\":{\"keccak256\":\"0x3aac641b64fd072d277dbf1cf4e2d264a124efa84df8b896181232ad9338ef54\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b390a6511bbce7e097844e8df0a6f27b625c79b3dc81cd500ad0c30647e7b858\",\"dweb:/ipfs/QmQ4DNA5AotHxnMg5NJuBNeMw69KFb64HgM3Nq2f5jMKD3\"]},\"lib/ethereum-vault-connector/src/interfaces/IEthereumVaultConnector.sol\":{\"keccak256\":\"0x2d7b4cf0a3346feada4b7bc2c661c89fa60a485f498f374078a934cd4ece7c7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e8c832fdc952913ffeec92cdbf06266b427c66d87ad1b5d027c73b22fc4fc82d\",\"dweb:/ipfs/QmPEcrWAR85tMKBFQDnTZxgXPVENRU2B6MBgzgRBhbV8oP\"]},\"lib/ethereum-vault-connector/src/utils/EVCUtil.sol\":{\"keccak256\":\"0xf36dc84b186ae90745ebb78b6ee59f9971d098309bbb041c589edfebb5441e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://046734dff2a3323902550f58bc03238570574daa5f9abbf7c2dbf9d2211a1ce8\",\"dweb:/ipfs/QmWSCff8GUSxw7YY5KMiMVgSH8AMUKpkJYrtx1uuRCzSoT\"]},\"lib/euler-price-oracle/src/EulerRouter.sol\":{\"keccak256\":\"0xee19338e004710b4d63aa93cfdd45937a7d6317fc3b242a2ad7e26b1da1916e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ff0a8a79f85d188d86c5ecf28e9e14e89360d90118bf9c6f99096508277854f\",\"dweb:/ipfs/QmayYDVhH6tckTPgZw8mPf6FRnacNYuWmHkaGQ3EjnLKUS\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x324b43bdb94d78fe11220102056ba27362b7083fbc394fddc86dd68f75c0e46e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://182634c0295b6ce25fb524a614a534de2ef805d68712ca6cefb0f02f25dbcb65\",\"dweb:/ipfs/QmcpXKznSpfMLAzUitdVVUL2FXMx35RWWBcUcaenjwdUij\"]},\"src/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f\",\"dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA\"]},\"src/lib/Errors.sol\":{\"keccak256\":\"0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9\",\"dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v\"]},\"src/lib/Governable.sol\":{\"keccak256\":\"0xce41206071ab1b37c0dc9510ea75482df90904cb48766a8d23acb7f47d6e2808\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64eca98dd6719d83d0d0958804d03ea4210d7a65e678273b466d0d91101acf37\",\"dweb:/ipfs/QmZ2ibPPHm2uvUcBiYF34fHWz6wv1AAErP8xgHuuun6puo\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_evc", "type": "address" },
            {
              "internalType": "address",
              "name": "_governor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "ControllerDisabled" },
        { "inputs": [], "type": "error", "name": "EVC_InvalidAddress" },
        {
          "inputs": [],
          "type": "error",
          "name": "Governance_CallerNotGovernor"
        },
        { "inputs": [], "type": "error", "name": "NotAuthorized" },
        {
          "inputs": [],
          "type": "error",
          "name": "PriceOracle_InvalidConfiguration"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" }
          ],
          "type": "error",
          "name": "PriceOracle_NotSupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "asset0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fallbackOracle",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FallbackOracleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldGovernor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GovernorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ResolvedVaultSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EVC",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fallbackOracle",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfiguredOracle",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inAmount",
              "type": "uint256"
            },
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuote",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inAmount",
              "type": "uint256"
            },
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getQuotes",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" },
            { "internalType": "address", "name": "oracle", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "govSetConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_fallbackOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "govSetFallbackOracle"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "vault", "type": "address" },
            { "internalType": "bool", "name": "set", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "govSetResolvedVault"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governor",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "inAmount",
              "type": "uint256"
            },
            { "internalType": "address", "name": "base", "type": "address" },
            { "internalType": "address", "name": "quote", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "resolveOracle",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" },
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "vault", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "resolvedVaults",
          "outputs": [
            { "internalType": "address", "name": "asset", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newGovernor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferGovernance"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "EVC()": { "returns": { "_0": "The address of the EVC contract." } },
          "constructor": {
            "params": { "_governor": "The address of the governor." }
          },
          "getConfiguredOracle(address,address)": {
            "params": {
              "base": "The address of the base token.",
              "quote": "The address of the quote token."
            },
            "returns": {
              "_0": "The configured `PriceOracle` for the pair or `address(0)` if no oracle is configured."
            }
          },
          "getQuote(uint256,address,address)": {
            "params": {
              "base": "The token that is being priced.",
              "inAmount": "The amount of `base` to convert.",
              "quote": "The token that is the unit of account."
            },
            "returns": {
              "_0": "The amount of `quote` that is equivalent to `inAmount` of `base`."
            }
          },
          "getQuotes(uint256,address,address)": {
            "params": {
              "base": "The token that is being priced.",
              "inAmount": "The amount of `base` to convert.",
              "quote": "The token that is the unit of account."
            },
            "returns": {
              "_0": "The amount of `quote` you would get for selling `inAmount` of `base`.",
              "_1": "The amount of `quote` you would spend for buying `inAmount` of `base`."
            }
          },
          "govSetConfig(address,address,address)": {
            "details": "Callable only by the governor.",
            "params": {
              "base": "The address of the base token.",
              "oracle": "The address of the PriceOracle to resolve the pair.",
              "quote": "The address of the quote token."
            }
          },
          "govSetFallbackOracle(address)": {
            "details": "Callable only by the governor. `address(0)` removes the fallback.",
            "params": {
              "_fallbackOracle": "The address of the PriceOracle that is called when base/quote is not configured."
            }
          },
          "govSetResolvedVault(address,bool)": {
            "details": "Callable only by the governor. Vault must implement ERC4626. Note: Before configuring a vault verify that its `convertToAssets` is secure.",
            "params": {
              "set": "True to configure the vault, false to clear the record.",
              "vault": "The address of the ERC4626 vault."
            }
          },
          "resolveOracle(uint256,address,address)": {
            "details": "Implements the following resolution logic: 1. Check the base case: `base == quote` and terminate if true. 2. If a PriceOracle is configured for base/quote in the `oracles` mapping, return it. 3. If `base` is configured as a resolved ERC4626 vault, call `convertToAssets(inAmount)` and continue the recursion, substituting the ERC4626 `asset` for `base`. 4. As a last resort, return the fallback oracle or revert if it is not set.",
            "params": {
              "base": "The token that is being priced.",
              "inAmount": "The amount of `base` to convert.",
              "quote": "The token that is the unit of account."
            },
            "returns": {
              "_0": "The resolved amount. This value may be different from the original `inAmount` if the resolution path included an ERC4626 vault present in `resolvedVaults`.",
              "_1": "The resolved base.",
              "_2": "The resolved quote.",
              "_3": "The resolved PriceOracle to call."
            }
          },
          "transferGovernance(address)": {
            "details": "Can only be called by the current governor.",
            "params": { "newGovernor": "The address of the next governor." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "EVC()": {
            "notice": "Returns the address of the Ethereum Vault Connector (EVC) used by this contract."
          },
          "constructor": { "notice": "Deploy EulerRouter." },
          "fallbackOracle()": {
            "notice": "The PriceOracle to call if this router is not configured for base/quote."
          },
          "getConfiguredOracle(address,address)": {
            "notice": "Get the PriceOracle configured for base/quote."
          },
          "getQuote(uint256,address,address)": {
            "notice": "One-sided price: How much quote token you would get for inAmount of base token, assuming no price spread."
          },
          "getQuotes(uint256,address,address)": {
            "notice": "Two-sided price: How much quote token you would get/spend for selling/buying inAmount of base token."
          },
          "govSetConfig(address,address,address)": {
            "notice": "Configure a PriceOracle to resolve base/quote and quote/base."
          },
          "govSetFallbackOracle(address)": {
            "notice": "Set a PriceOracle as a fallback resolver."
          },
          "govSetResolvedVault(address,bool)": {
            "notice": "Configure an ERC4626 vault to use internal pricing via `convert*` methods."
          },
          "governor()": {
            "notice": "The active governor address. If `address(0)` then the role is renounced."
          },
          "name()": { "notice": "Get the name of the oracle." },
          "resolveOracle(uint256,address,address)": {
            "notice": "Resolve the PriceOracle to call for a given base/quote pair."
          },
          "resolvedVaults(address)": {
            "notice": "ERC4626 vaults resolved using internal pricing (`convertToAssets`)."
          },
          "transferGovernance(address)": {
            "notice": "Transfer the governor role to another address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axiom-crypto/axiom-std/=lib/euler-price-oracle/lib/axiom-std/sr/",
        "@axiom-crypto/v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/",
        "@openzeppelin/contracts/utils/math/=lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/utils/math/",
        "@pyth/=lib/euler-price-oracle/lib/pyth-sdk-solidity/",
        "@redstone/evm-connector/=lib/euler-price-oracle/lib/redstone-oracles-monorepo/packages/evm-connector/contracts/",
        "@solady/=lib/euler-price-oracle/lib/solady/src/",
        "@uniswap/v3-core/=lib/euler-price-oracle/lib/v3-core/",
        "@uniswap/v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/",
        "axiom-std/=lib/euler-price-oracle/lib/axiom-std/src/",
        "axiom-v2-periphery/=lib/euler-price-oracle/lib/axiom-v2-periphery/src/",
        "ds-test/=lib/ethereum-vault-connector/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "ethereum-vault-connector/=lib/ethereum-vault-connector/src/",
        "euler-price-oracle-test/=lib/euler-price-oracle/test/",
        "euler-price-oracle/=lib/euler-price-oracle/src/",
        "euler-vault-kit/=lib/euler-vault-kit/src/",
        "evc/=lib/ethereum-vault-connector/src/",
        "evk-test/=lib/euler-vault-kit/test/",
        "evk/=lib/euler-vault-kit/src/",
        "fee-flow/=lib/fee-flow/src/",
        "forge-gas-snapshot/=lib/euler-vault-kit/lib/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "openzeppelin/=lib/ethereum-vault-connector/lib/openzeppelin-contracts/contracts/",
        "permit2/=lib/euler-vault-kit/lib/permit2/",
        "pyth-sdk-solidity/=lib/euler-price-oracle/lib/pyth-sdk-solidity/",
        "redstone-oracles-monorepo/=lib/euler-price-oracle/lib/",
        "reward-streams/=lib/reward-streams/src/",
        "solady/=lib/euler-price-oracle/lib/solady/src/",
        "solmate/=lib/fee-flow/lib/solmate/src/",
        "v3-core/=lib/euler-price-oracle/lib/v3-core/contracts/",
        "v3-periphery/=lib/euler-price-oracle/lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "lib/euler-price-oracle/src/EulerRouter.sol": "EulerRouter"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/ethereum-vault-connector/src/ExecutionContext.sol": {
        "keccak256": "0x3aac641b64fd072d277dbf1cf4e2d264a124efa84df8b896181232ad9338ef54",
        "urls": [
          "bzz-raw://b390a6511bbce7e097844e8df0a6f27b625c79b3dc81cd500ad0c30647e7b858",
          "dweb:/ipfs/QmQ4DNA5AotHxnMg5NJuBNeMw69KFb64HgM3Nq2f5jMKD3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/ethereum-vault-connector/src/interfaces/IEthereumVaultConnector.sol": {
        "keccak256": "0x2d7b4cf0a3346feada4b7bc2c661c89fa60a485f498f374078a934cd4ece7c7b",
        "urls": [
          "bzz-raw://e8c832fdc952913ffeec92cdbf06266b427c66d87ad1b5d027c73b22fc4fc82d",
          "dweb:/ipfs/QmPEcrWAR85tMKBFQDnTZxgXPVENRU2B6MBgzgRBhbV8oP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/ethereum-vault-connector/src/utils/EVCUtil.sol": {
        "keccak256": "0xf36dc84b186ae90745ebb78b6ee59f9971d098309bbb041c589edfebb5441e3f",
        "urls": [
          "bzz-raw://046734dff2a3323902550f58bc03238570574daa5f9abbf7c2dbf9d2211a1ce8",
          "dweb:/ipfs/QmWSCff8GUSxw7YY5KMiMVgSH8AMUKpkJYrtx1uuRCzSoT"
        ],
        "license": "MIT"
      },
      "lib/euler-price-oracle/src/EulerRouter.sol": {
        "keccak256": "0xee19338e004710b4d63aa93cfdd45937a7d6317fc3b242a2ad7e26b1da1916e4",
        "urls": [
          "bzz-raw://2ff0a8a79f85d188d86c5ecf28e9e14e89360d90118bf9c6f99096508277854f",
          "dweb:/ipfs/QmayYDVhH6tckTPgZw8mPf6FRnacNYuWmHkaGQ3EjnLKUS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC4626.sol": {
        "keccak256": "0x324b43bdb94d78fe11220102056ba27362b7083fbc394fddc86dd68f75c0e46e",
        "urls": [
          "bzz-raw://182634c0295b6ce25fb524a614a534de2ef805d68712ca6cefb0f02f25dbcb65",
          "dweb:/ipfs/QmcpXKznSpfMLAzUitdVVUL2FXMx35RWWBcUcaenjwdUij"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPriceOracle.sol": {
        "keccak256": "0x03567dd4084dc74a9e2f9eeffce4d9047989b0d2122820716c3bc75891484308",
        "urls": [
          "bzz-raw://23965a79475c85a0a8a3a137a76424f60debd9e592bc9127d463392fad7df30f",
          "dweb:/ipfs/QmPc1bV3kZ3ynLGTqG6xRbZ3E5AstYdfipXbysSqYGhJYA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Errors.sol": {
        "keccak256": "0x2551662bcef8d4a5cb7cdc8cd404f28c726af1bcfe7ef371b22d53322a932698",
        "urls": [
          "bzz-raw://1641b99e0c907950448d62205fc23b5550c44899ba8c0bc0274a6b0a501981b9",
          "dweb:/ipfs/QmZvDhw4Ao3m8jRjNjT8Xq8imCPecJyytUTtCUjt5RoB4v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/lib/Governable.sol": {
        "keccak256": "0xce41206071ab1b37c0dc9510ea75482df90904cb48766a8d23acb7f47d6e2808",
        "urls": [
          "bzz-raw://64eca98dd6719d83d0d0958804d03ea4210d7a65e678273b466d0d91101acf37",
          "dweb:/ipfs/QmZ2ibPPHm2uvUcBiYF34fHWz6wv1AAErP8xgHuuun6puo"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "id": 37
}
